stop redis-server: service redis-server stop
Redis def:
	- DB using key-value in memory
	- Very fast
	- Can use disk for data persistence 
	- Usually for temporary applications (ex: e-commerce cart, cache, etc...)
	
Data types:
	- Strings ("SET KEY VALUE" ||| "GET KEY" ||| "MSET KEY1 VALUE1 KEY2 VALUE2...KEYN VALUEN"S)
		-commands ex:    SET 1 "Value saved for key 1"
			         GET 1
			         GETRANGE KEY INIT END (return from init to end chars of the value)
			         MSET 1 "RICARDO" 2 "RAMOS" 3 "RIBEIRO"
			         EXISTS "key" (Verify if the key exists r->1 or 0)
			         DEL "key"
			         TYPE "key"
			         Expiration:
			         	-EX: Seconds
			         	-PX: Mileseconds
			         	-NX: only works if the key doesnt exists
			         	-XX: only works if the key exists
			         	example: SET 1 "RRRR" EX 60 NX 
			         	example2: EXPIRE key N (n the number in seconds)
			         	example3: PEXISPIRE key N (n is the number in mileseconds)
			         	PTTL KEY (verify the expiration time in mileseconds)
			         	TTL KEY (verify the expiration time in seconds)
			         	PERSIST KEY (remove the expiration time)
				GETSET key value (update the value and return old value)
				MGET KEY1 KEY2 KEY3 (return multiple values)
				STRLEN KEY (return the value size)
	- Hashes
		-HMSET KEY FIELD VALUE FIELD VALUE...
			-example: HMSET FORM NAME "RICARDO" JOB "PROGRAMMER" AGE "21"
		- HDEL KEY FIELD (Delete a field from a key)
		- HGETALL KEY (return all fields)
		- HMGET KEY FIELD1 FIELD2...
		- HVALS KEY (GET HASH)
		- HEXISTS KEY FIELD( RETURN TRUE IF THE FIELD EXISTS AND FALSE IF it doesnt)
		- HLEN KEY ( number of fields)
		- HKEYS KEY (fields name)
		
	- Lists (list of string)
		- LPUSH KEY VALUE3 VALUE2 VALUE1 (Insert in the beginning of the list)
		- RPUSH KEY VALUE (insert in the end of the list)
		- LRANGE INIT END ( return interval)
		- LINSERT KEY AFTER/BEFORE VALUE(REFERENCE) VALUE(TO INSERT)
		- LSET KEY INDEX VALUE (To change value index)
		- LINDEX KEY INDEX (VALUE IN THE INDEX)
		- LLEN KEY (LENGTH OF THE LIST)
		- LPOP KEY (REMOVE IN THE BEGINING)
		- RPOP (REMOVE IN THE END)

	- Sets(list with no duplicate value)
		-Unordered 
			- SADD KEY VALUE1 VALUE2... ( RETURN IS THE NUMBER OF INSERTED ITENS)
			- SMEMBERS KEY (list members)
			- SCARD KEY (number of members)
			- SISMEMBER KEY VALUE (true if the value exists)
			- srem key value1 value2... (remove)
			- SDIFF KEY1 KEY2 (itens in the key1 that doesnt have in key2)
			- SINTER KEY1 KEY2 (itens in both sets)
		-Ordered
			- ZADD KEY SCORE VALUE 
			- ZCARD KEY (number of members)
			- ZRANK KEY VALUE (POSITION OF THE VALUE)
			- ZCOUNT LEY INI END (number of members between score INI and END)
			- ZSCORE KEY VALUE ( return the score)
			- ZRANGE KEY INIT END WITHSCORES (return with scores)
			- ZREM KEY VALUE (remove, return boolean)
		
	
Transactions:
	- MULTI ( beginningof the transaction) - begin
	- EXEC ( EXECUTE all commands after MULTI) - commit
	- DISCARD (discard all commands after MULTI - rollback
	
DB:
	- SELECT N (N is the DB number)(clusters only support zero) (default is zero)
	- FLUSHDB (delete all registers in the current DB)
	- FLUSHALL (delete all registers in ALL DB)
	- SWAPDB index1 index2 (a client can see another db value)
	
Cursors:
	- SCAN (SEARCH ALL KEYS)
	- SSCAN (search all sets)
	- HSCAN (search all hashes)
	- ZSCAN (search all ordered sets and scores)
	
ADM:
	- CLIENT LIST (ALL CONNECTED CLIENTS)
	- CLIENT KILL IP:PORT
	- MONITOR (MONITOR INFO)
	- INFO (SERVER STATISTIC)
	- CONFIG GET * (ALL CONFIGS)
	- CONFIG get dir (find physical config file)
	- CONFIG SET config value (change config)
	
BACKUP:
	- dump.rdb (backup file)

Modes data persistence:
	- None (data stay only in memory)
	- RDB (execute persistence in an interval)
	- AOF (log with each operation to execute when the server starts)
	(its possible to use more than a mode)
	- manually:
		-SAVE seconds changes (execute every x seconds if it has y changes)
	- BIGSAVE (asynchronous)
